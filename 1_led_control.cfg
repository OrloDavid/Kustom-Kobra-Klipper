# 
# Custom RGBC Addressable LED Effects
# https://github.com/julianschill/klipper-led_effect
# Scroll to bottom for cheat sheet
# Use Macros to trigger effects
#

[neopixel rgbc_leds]
pin:PE6
chain_count:5

[led_effect kobra_leds_on]
leds:
  neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    static         1  0     top        (1.0,  1.0, 1.0)
#Macro  all_led_on

[led_effect kobra_leds_idle]
leds:
  neopixel:rgbc_leds
autostart:                          true
frame_rate:                         24
layers:
    strobe         .3  .3   add        (0.5,  0.4, 0.4)
    breathing      8  0     difference (0.0, 0.1, 0.0)
    static         1  0     top        (0.0,  0.0, 0.1)
#Macro  status_idle     
      
[led_effect kobra_leds_heating]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
     breathing  3 1 top (1, 0.18, 0)
#Macro  status_heating

[led_effect kobra_leds_starting]
leds:
  neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    breathing  10 1 top (1,0,.2)
#Macro  status_starting
     
[led_effect kobra_leds_printing]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    gradient  0.3  1 add (0.0, 0.3, 0.3),(0.0, 0.5, 0.0),(0.0, 0.0, 0.8)
    breathing  2  0     difference (0.0, 0.0, 1.0)
    twinkle  1 .25    top        (.2,  .2, .2)
#Macro  status_printing

[led_effect kobra_leds_home]
leds:
  neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    homing  5 1 top (.2,.3,1)
#Macro  status_home

[led_effect kobra_leds_leveling]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
      static     1  0     top        (1.0, 1.0, 1.0)
#Macro  status_leveling

[led_effect kobra_leds_park]
leds:
  neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    breathing  10 1 top (.5,.5,1)
#Macro  status_park


[led_effect kobra_leds_finished]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
     twinkle 1 .25 top (1.0,  1.0, 1.0)
#Macro  status_finished

[led_effect kobra_leds_progress]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
     progress 1 1 top (0.0,  1.0, 0.0)
     blink    1 .5 top (0.0,  1.0, 0.0)
#Macro  LED_show_print_progress

[led_effect kobra_leds_progress_bar]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    progress  -1  0 add         ( 0, 0,   1),( 0, 0.1, 0.6)
    static     0  0 top         ( 0, 0, 0.1)

[led_effect kobra_leds_test]
leds:
    neopixel:rgbc_leds
autostart:                          false
frame_rate:                         24
layers:
    strobe         1  1.5   add        (1.0,  1.0, 1.0)
    breathing      2  0     difference (0.0, 0.0, 1.0)
    static         1  0     top        (0.0,  0.5, 0.5)


#
# Static
# Effect Rate:  Not used but must be provided
# Cutoff:       Not used but must be provided
# Palette:      Colors are blended evenly across the strip
#
# LinearFade
# Effect Rate:  3   Duration of a complete cycle
# Cutoff:       0   Not used but must be provided
# Palette:          Colors are cycled in order
# LEDs fade through the colors. If a palette of multiple colors is provided, it will cycle through those colors in the order they are specified in the palette. The effect rate parameter controls how long it takes to go through all colors.
#
# Breathing
# Effect Rate:  3   Duration of a complete cycle
# Cutoff:       0   Not used but must be provided
# Palette:          Colors are cycled in order
# Colors fade in and out. If a palette of multiple colors is provided, it will cycle through those colors in the order they are specified in the palette. The effect rate parameter controls how long it takes to "breathe" one time.
# 
# Blink
# Effect Rate:  1   Duration of a complete cycle
# Cutoff:       0.5 Ratio of the time the LEDs are on (between 0 and 1)
# Palette:          Colors are cycled in order
# LEDs are turned fully on and fully off based on the effect speed. If a palette of multiple colors is provided, it will cycle through those colors in order.
# 
# Strobe
# Effect Rate:  1   Number of times per second to strobe
# Cutoff:       1.5 Determines decay rate. A higher number yields quicker decay
# Palette:          Colors are cycled in order
# LEDs are turned fully on and then faded out over time with a decay. If a palette of multiple colors is provided, it will cycle through those colors in order. The effect rate controls how many times per second the lights will strobe. The cutoff parameter controls the decay rate. A good decay rate is 1.5.
#
# Twinkle
# Effect Rate:  1   Increases the probability that an LED will illuminate.
# Cutoff:       .25 Determines decay rate. A higher number yields quicker decay
# Palette:          Random color chosen
# Random flashes of light with decay along a strip. If a palette is specified, a random color is chosen from the palette.
#
# Gradient
# Effect Rate:  1   How fast to cycle through the gradient, negative values change direction.
# Cutoff:       1   Number of gradients on chain
# Palette:          Linear gradient with even spacing.
# Colors from the palette are blended into a linear gradient across the length of the strip. The effect rate parameter controls the speed at which the colors are cycled through. A negative value for the effect rate changes the direction the gradient cycles (right to left vs left to right). The Cutoff determines the length of the gradient in relation to the chain length. The bigger the value, the shorter the gradient (e.g. the value 2 means 2 gradients on the length of the chain)
#
# Pattern
# Effect Rate:  1   Time between pattern shifts
# Cutoff:       1   How far the pattern gets shifted
# Palette:          The pattern to be shifted
# The palette is applied as a recurring pattern on the chain and shifted along the chain. The effect rate determines the time between the shifts in seconds, the cutoff determines the amount of LED positions the pattern gets shifted.
#
# Comet
# Effect Rate:  1   How fast the comet moves, negative values change direction
# Cutoff:       1   Length of tail (somewhat arbitrary)
# Palette:          Color of "head" and gradient of "tail"
# A light moves through the LEDs with a decay trail. Direction can be controlled by using a negative effect rate value. The palette colors determine the color of the comet and the tail. The first color of the palette defines the color of the "head" of the comet and the remaining colors are blended into the "tail"
#
# Chase
# Effect Rate:  1   How fast the comet moves, negative values change direction
# Cutoff:       1   Length of tail (somewhat arbitrary)
# Palette:          Color of "head" and gradient of "tail"
# Identical settings as Comet, but with multiple lights chasing each other.
#
# Heater
# Effect Rate:  1   Minimum temperature to activate effect
# Cutoff:       0   Disable effect once temp is reached
# Palette:          Color values to blend from Cold to Hot
# This effect becomes active when the specified heater is active or the temperature is greater than the minimum specified temperature. For instance, if a heater is turned on and set to a target temperature, the LEDs will cycle through the gradient colors until the target temperature is met. Once it has been met, the last color of the gradient is used and the effect is essentially a static color until the Heater state changes. If the cutoff parameter is supplied, the effect will be disabled once the target temperature is met. If the heater is turned off, the colors will follow this pattern in reverse until the temperature falls below the minimum temperature specified in the config. This can be used to indicate the hotend or bed is in a safe state to touch.
#
# Temperature
# Effect Rate:  20  Cold Temperature
# Cutoff:       80  Hot Temperature
# Palette:          Color values to blend from Cold to Hot
# The temperature of the configured heater determines the color in a gradient over the palette. When only one color is defined in the palette, the brightness of that color is defined by the temperature.
#
# Fire
# Effect Rate:  45  Probability of "sparking"
# Cutoff:       40  Rate of "cooling"
# Palette:          Color values to blend from "Cold" to "Hot"
# The FastLED library for Arduino has a sample sketch called Fire2012WithPalette included with it. This effect is a port of that sketch. It simulates a flame by "sparking" an LED. The "heat" from that LED travels down the length of the LEDs where it gradually cools. A higher rate of sparking causes a greater amount of heat to accumulate at the base of the strip resulting a more intense flame. Changing the rate of cooling results in longer or shorter overall flames.
# 
# HeaterFire
# Effect Rate:  1   Minimum temperature to activate effect
# Cutoff:       0   Disable effect once temp is reached
# Palette:          Color values to blend from "Cold" to "Hot"
# The fire effect but responsive to the temperature of the specified heater. The flame starts as a small ember and increases in intensity as the heater's target temperature is reached. If the cutoff parameter is set to 1, the effect will be disabled once the target temperature is reached, otherwise it will stay active until the heater is disabled.
#
# AnalogPin
# Effect Rate:  10  Multiplier for input signal
# Cutoff:       40  Minimum threshold to trigger effect
# Palette:          Color values to blend
# This effect uses the value read from an analog pin to determine the color. If multiple colors are specified in the palette, it chooses one based on the value of the pin. If only one color is specified, the brightness is proportional to the pin value. An example usage would be attaching an analog potentiometer that controls the brightness of an LED strip. Internally, input voltage is measured as a percentage of voltage vs aref. Another use could be to attach the RPM wire from a fan if the fan has a tachometer. It must be used with care as too much current or too high a voltage can damage a pin or destroy a controller board.
# 
# Stepper
# Effect Rate:  4   Number of trailing LEDs
# Cutoff:       4   Number of leading LEDs
# Palette:          Color values to blend
# The position of the specified stepper motor is represented by the first color in the palette. The remaining colors in the gradient are blended and mirrored on either side. As the stepper position changes relative to the axis length, the lights move up and down the strip. It should be noted that the effect itself updates stepper position every half second based on the reported position of the stepper similar to the GET_POSITION gcode command. It will not be realtime. A negative value in effect rate will fill the entire strip leading up to the stepper position, a negative value in cutoff will fill the entire strip after the stepper position.
#
# StepperColor
# Effect Rate:  1   Scaling of position
# Cutoff:       0   Offset of position
# Palette:          Color values to blend
# The color of the LEDs are determined by the position of the stepper motor. The position is determined between 0 and 100 and is multiplied with the effect rate and the cutoff is added as offset. This then determines the value in the palette, that is calculated as a gradient over the specified color values.
#
# Progress
# Effect Rate:  4   Number of trailing LEDs
# Cutoff:       4   Number of leading LEDs
# Palette:          Color values to blend
# Exact same configuration as Stepper but instead of reporting stepper position, this layer reports print progress.
# 
# Homing
# Effect Rate:  1   Determines decay rate. A higher number yields slower decay
# Cutoff:       0   Not used, but must be provided
# Palette:          Colors are cycled in order
# LEDs turn on during homing when the endstop is triggered and fade out again. The effect rate determines the time for the fade out. If a palette of multiple colors is provided, it will cycle through those colors in order.
# 
# 
# Effect Layer Blending
# 
# Layer blending is always evaluated from the bottom up.
# Since values cannot exceed 100% brightness and 0% darkness, they are clamped to this range as a floating-point number ( 0.0 - 1.0 )
#
# bottom
# No blending is done, the value from the color channel of the bottom layer is used.
#
# top
# No blending is done, the value from the color channel of the top layer is used.
#
# add
#    ( t + b )
# Color channels (Red, Green, and Blue) are added to one another. This results in channels becoming brighter.
#
# subtract
#    ( b - t )
# The the top layer is subtracted from the bottom layer. This results in darkening similar colors.
#
# subtract_b
#    ( t - b )
# The the bottom layer is subtracted from the top layer. This results in darkening similar colors.
#
# difference
#   ( t - b ) or ( b - t )
# The darker of the layers is subtracted from the brighter of the two
#
# average
#    ( t + b ) / 2
# The average of the channels is taken
#
# multiply
#    ( t * b )
# The channels are multiplied together, this is useful to darken colors
#
# divide
#     ( t / b )
# The channels are divided, this results in brightening colors, often to white
#
# divide_inv
#    ( b / t )
# Like divide, but bottom divided by top
#
# screen
#    1 - ( 1 - t ) * ( 1 - b )
# The values are inverted, multiplied, and then inverted again. Similar to divide, it results in brighter colors
#
# lighten
#   ( t if t > b else b )
# The brighter of the color channels is used
#
# darken
#    ( t if t < b else b )
# The opposite of lighten, the darker of color channels is used
#
# overlay
#    ( 2ab if a > .5 else 1 - 2( 1 - a )( 1 - b ) )
# Overlay is a combination of multiply and screen. This has a similar effect of increasing contrast.
#